using CompProgEdu.Core.Features.Response;
using CompProgEdu.Core.Features.TestEntities;
using CompProgEdu.Features.TestEntities;
using MediatR;
using Microsoft.AspNetCore.Mvc;
using System.Collections.Generic;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Authorization;

namespace CompProgEdu.Features.Controllers
{
    [Route("api/test-account")]
    public class TestAccountController : StandardApiController
    {
        public TestAccountController(IMediator mediator) : base(mediator) { }

        [HttpPost]
        public async Task<ActionResult<ValidateableResponse<TestAccountGetDto>>> Create(
            [FromBody] CreateTestAccountRequest request)
        {
            var result = await Mediator.Send(request);

            return result;
        }

        [HttpGet]
<<<<<<< HEAD
        public async Task<ActionResult<ValidateableResponse<List<TestAccountGetDto>>>> GetAll()
        {
            var result = await Mediator.Send(new GetAllTestAccountsRequest());

            return result;
        }

        [HttpGet("{id}")]
=======
        // TODO: Create Custom Generic Decoraor
        //[Authorize(Roles = "Global Admin")]
>>>>>>> master
        public async Task<ActionResult<ValidateableResponse<TestAccountGetDto>>> GetById(
          int id)
        {
            var result = await Mediator.Send(new GetTestAccountByIdRequest { Id = id });

            return result;
        }

        [HttpPut("{id}")]
        public async Task<ActionResult<ValidateableResponse<TestAccountGetDto>>> Update(
         [FromBody] UpdateTestAccountByIdRequest request, int id)
        {
            request.Id = id;
            var result = await Mediator.Send(request);

            return result;
        }

        [HttpDelete]
        public async Task<ActionResult<ValidateableResponse<TestAccountGetDto>>> Delete(
         int id)
        {
            var result = await Mediator.Send(new DeleteTestAccountByIdRequest { Id = id });

            return result;
        }
    }
}
