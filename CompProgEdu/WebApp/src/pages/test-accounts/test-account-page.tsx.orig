<<<<<<< HEAD
import React, { useState, useEffect } from 'react';
import { Form as SUIForm, Divider, Button, Segment } from 'semantic-ui-react';
import { TestAccountService, TestAccountGetDto } from '../../swagger';
import { Form } from 'react-final-form';
import { RFFInput, RFFCheckbox } from '../../component/forms';

export const TestAccountPage = () => {
  const [account, setAccount] = useState<TestAccountGetDto>();

  useEffect(() => {
    fetch();
  }, []);

  const fetch = async () => {
    const data = await TestAccountService.getById({ id: 1 });

    setAccount(data.result);
  };

  const onSubmit = async (values: any) => {
    const response = await TestAccountService.create({ body: values });

    if (response.errors) {
      return response;
    }
  };

  return (
    <>
      <Divider />
      <Form
        onSubmit={onSubmit}
        render={({ handleSubmit, hasSubmitErrors }) => {
          return (
            <SUIForm onSubmit={handleSubmit} error={hasSubmitErrors}>
              <Segment style={{ width: 500, padding: 50, margin: 20 }}>
                <RFFInput label="Account Number" fieldName="accountNumber" />
                <RFFInput label="Account Name" fieldName="accountName" />
                <RFFInput label="Email Address" fieldName="emailAddress" />
                <RFFCheckbox label="Is Premium?" fieldName="isPremium" toggle />
                <RFFInput
                  fieldName="numberOfPeople"
                  label="Number of People"
                  number
                />
                <div>
                  <Button type="submit">Create</Button>
                </div>
              </Segment>
            </SUIForm>
          );
        }}
      />
    </>
=======
import React from "react";
import { Header, Button } from "semantic-ui-react";
import { TestAccountService } from "../../swagger";
import { RequiresAuthenticationForPath } from "../../component/RequiresAuthenticationForPath";

export const TestAccountPage = () => {
  const getsom = async () => {
    var test = TestAccountService.getById({ id: 1 });
    console.log(test);
  }

  return (
    <RequiresAuthenticationForPath>
      <div
        style={{
          paddingTop: 200,
          textAlign: "center",
        }}
      >
        <Header>This is the Test Account page</Header>
        <Button onClick={() => getsom()}>Test get endpoint for auth after log in</Button>
      </div>
    </RequiresAuthenticationForPath>

>>>>>>> master
  );
};
